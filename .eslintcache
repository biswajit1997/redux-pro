[{"/home/tantrauser/Documents/All /redux/redux-pro/src/index.js":"1","/home/tantrauser/Documents/All /redux/redux-pro/src/App.js":"2","/home/tantrauser/Documents/All /redux/redux-pro/src/reportWebVitals.js":"3","/home/tantrauser/Documents/All /redux/redux-pro/src/Components/Newpage.js":"4","/home/tantrauser/Documents/All /redux/redux-pro/src/Components/Login.js":"5"},{"size":547,"mtime":1609237480864,"results":"6","hashOfConfig":"7"},{"size":959,"mtime":1609243795618,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1609222647152,"results":"9","hashOfConfig":"7"},{"size":624,"mtime":1609234550104,"results":"10","hashOfConfig":"7"},{"size":2440,"mtime":1609242511172,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"8sksuq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/home/tantrauser/Documents/All /redux/redux-pro/src/index.js",[],["24","25"],"/home/tantrauser/Documents/All /redux/redux-pro/src/App.js",["26","27"],"/home/tantrauser/Documents/All /redux/redux-pro/src/reportWebVitals.js",[],"/home/tantrauser/Documents/All /redux/redux-pro/src/Components/Newpage.js",[],"/home/tantrauser/Documents/All /redux/redux-pro/src/Components/Login.js",["28","29","30","31","32"],"import React from \"react\";\nimport { Col, Row, Label, Input, FormGroup, Button, Form } from \"reactstrap\";\nimport { AvForm, AvField, AvInput } from \"availity-reactstrap-validation\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst Login = (props) => {\n  const dispatch = useDispatch();\n  const userData = useSelector((state) => state.user);\n  function handleValidSubmit(event, values) {\n    dispatch({\n      type: \"LOGIN_USER\",\n      payload: values,\n    });\n  }\n  return (\n    <div>\n      <div className=\"col-sm-6 offset-sm-3 mt-4\">\n        {/* <Form>\n          <FormGroup>\n            <h3>Login</h3>\n          </FormGroup>\n          <FormGroup>\n            <Label>Email</Label>\n            <Input type=\"email\" className=\"form-control\" name=\"email\" />\n          </FormGroup>\n          <FormGroup>\n            <Label>Password</Label>\n            <Input type=\"password\" className=\"form-control\" name=\"password\" />\n          </FormGroup>\n          <FormGroup>\n            <Button type=\"submit\" className=\"btn btn-info\">\n              Submit\n            </Button>\n          </FormGroup>\n        </Form> */}\n        <AvForm\n          className=\"needs-validation\"\n          onValidSubmit={(e, v) => {\n            handleValidSubmit(e, v);\n          }}\n        >\n          <FormGroup>\n            <h3>Login</h3>\n          </FormGroup>\n          <FormGroup>\n            <Label htmlFor=\"validationCustom01\">Email</Label>\n            <AvField\n              name=\"email\"\n              placeholder=\"Enter email\"\n              type=\"text\"\n              errorMessage=\"Enter email\"\n              className=\"form-control\"\n              validate={{ required: { value: true } }}\n              id=\"validationCustom01\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"validationCustom02\">Password</Label>\n            <AvField\n              name=\"password\"\n              placeholder=\"Enter password\"\n              type=\"text\"\n              errorMessage=\"Enter password\"\n              className=\"form-control\"\n              validate={{ required: { value: true } }}\n              id=\"validationCustom02\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Button color=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </FormGroup>\n        </AvForm>\n        <div>\n          <p>{userData}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":7,"column":17,"nodeType":"39","messageId":"40","endLine":7,"endColumn":25},{"ruleId":"37","severity":1,"message":"42","line":2,"column":10,"nodeType":"39","messageId":"40","endLine":2,"endColumn":13},{"ruleId":"37","severity":1,"message":"43","line":2,"column":15,"nodeType":"39","messageId":"40","endLine":2,"endColumn":18},{"ruleId":"37","severity":1,"message":"44","line":2,"column":27,"nodeType":"39","messageId":"40","endLine":2,"endColumn":32},{"ruleId":"37","severity":1,"message":"45","line":2,"column":53,"nodeType":"39","messageId":"40","endLine":2,"endColumn":57},{"ruleId":"37","severity":1,"message":"46","line":3,"column":27,"nodeType":"39","messageId":"40","endLine":3,"endColumn":34},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'AvInput' is defined but never used.","no-global-assign","no-unsafe-negation"]